#include <mpi.h>
#include <iostream>

int main(int, char**)
{
    int myrank = 0;
    int proc_num = 0;
    int dimension = 2;
    int pDims[dimension] = {0};
    int period[dimension] = {0};

    MPI_Init(NULL, NULL);
    MPI_Comm_size(MPI_COMM_WORLD, &proc_num);
    MPI_Comm_rank(MPI_COMM_WORLD, &myrank);
    std::printf("Total processor number: %d.\n", proc_num);
    std::printf("Current processor rank: %d.\n", myrank);
    MPI_Dims_create(proc_num, dimensions, pDims);

    MPI_Comm_cartcomm;
    MPI_Cart_create(MPI_COMM_WORLD, dimension, pDims, period, 1, &cartcomm);

    int mycoords[dimension];

    MPI_Comm_rank(cartcomm, &myrank);
    MPI_Cart_coords(cartcomm, myrank, dimension, &mycoords[0]);
    std::printf("New processor rank under virtual topology: %d.\n", myrank);
    std::printf("Virtual topology coordinate: (%d, %d).\n", mycoords[0], mycoords[1]);
    std::printf("Global dimensions: %d x %d. \n, pDims[0], pDims[1]);
}